{"version":3,"sources":["theme.jsx","pages/ERD.jsx","pages/ApiDoc.jsx","pages/Error.jsx","components/TopBar.jsx","Router.jsx","index.jsx"],"names":["theme","createTheme","palette","primary","main","grey","secondary","error","red","light","dark","background","default","typography","button","textTransform","fontFamily","join","fontSize","overrides","MuiTypography","root","wordWrap","props","MuiTextField","variant","ERD","ApiDoc","specUrl","process","options","nativeScrollbars","Error","useStyles","makeStyles","createStyles","title","border","marginLeft","spacing","marginRight","padding","TopBar","matches","useMediaQuery","trigger","useScrollTrigger","threshold","classes","Slide","direction","in","AppBar","position","Toolbar","src","height","className","alt","name","path","map","content","i","Button","color","component","Link","to","container","marginTop","Router","Container","maxWidth","exact","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"wPA4CeA,EAzCDC,YAAY,CACxBC,QAAS,CACPC,QAAQ,CACNC,KAAMC,IAAK,MAEbC,UAAW,CACTF,KAAM,WAERG,MAAO,CACLH,KAAMI,IAAI,KACVC,MAAOD,IAAI,KACXE,KAAMF,IAAI,MAEZG,WAAY,CACVC,QAASP,IAAK,OAGlBQ,WAAY,CACVC,OAAQ,CACJC,cAAe,QAEnBC,WAAY,CACV,iBACA,cACAC,KAAK,KACPC,SAAU,IAEZC,UAAW,CACTC,cAAe,CACbC,KAAM,CACJC,SAAU,gBAIhBC,MAAO,CACLC,aAAc,CACVC,QAAS,e,kDC5BFC,EATH,WAEV,OACE,mCACE,4C,SCWSC,EAdA,WAEb,OACE,mCACE,cAAC,kBAAD,CACEC,QAAO,UAAKC,4BAAL,iBACPC,QAAS,CACPC,kBAAkB,QCCbC,EATD,WAEd,OACA,gCACC,qCACA,kF,sDCKKC,EAAYC,aAAW,SAAClC,GAAD,OAC3BmC,YAAa,CACXC,MAAO,CACLC,OAAQ,EACRC,WAAYtC,EAAMuC,QAAQ,GAC1BC,YAAaxC,EAAMuC,QAAQ,IAE7BzB,OAAQ,CACN,QAAS,CACP2B,QAASzC,EAAMuC,QAAQ,UAiDhBG,EA3CA,WACb,IAAMC,EAAUC,YAAc,qBACxBC,EAAUC,YAAiB,CAACC,UAAU,IACtCC,EAAUf,IAYhB,OACE,mCACE,cAACgB,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAKN,EAA7B,SACE,cAACO,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,qBACEC,IAAa,GAAD,OAAI1B,4BAAXc,EAAO,gCACZa,OAAQ,GACRC,UAAWT,EAAQZ,MACnBsB,IAAI,UApBC,CACf,CACEC,KAAM,SACNC,KAAM,KAER,CACED,KAAM,MACNC,KAAM,SAeUC,KAAI,SAACC,EAASC,GAAV,OACZ,cAACC,EAAA,EAAD,CAEEC,MAAM,UACNR,UAAWT,EAAQlC,OACnBoD,UAAWC,IACXC,GAAIN,EAAQF,KALd,SAOGE,EAAQH,MANJI,gBC9Cf9B,EAAYC,aAAW,SAAClC,GAAD,OAC3BmC,YAAa,CACXkC,UAAW,CACTC,UAAWtE,EAAMuC,QAAQ,SAwBhBgC,EAnBA,WACb,IAAMvB,EAAUf,IAEhB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAACuC,EAAA,EAAD,CAAWf,UAAWT,EAAQqB,UAAWI,SAAS,KAAlD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACd,KAAK,IAAIM,UAAWvC,IACjC,cAAC,IAAD,CAAOiC,KAAK,OAAOM,UAAWxC,IAC9B,cAAC,IAAD,CAAOwC,UAAWlC,eCrB9B2C,IAASC,OACP,eAACC,EAAA,EAAD,CAAe7E,MAAOA,EAAtB,UACE,cAAC8E,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a0a67d2a.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles'\r\nimport { red, grey } from '@material-ui/core/colors'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary:{\r\n      main: grey[200],\r\n    },\r\n    secondary: {\r\n      main: \"#E1A87A\"\r\n    },\r\n    error: {\r\n      main: red[\"500\"],\r\n      light: red[\"300\"],\r\n      dark: red[\"900\"],\r\n    },\r\n    background: {\r\n      default: grey[100]\r\n    }\r\n  },\r\n  typography: {\r\n    button: {\r\n        textTransform: \"none\"\r\n    },\r\n    fontFamily: [\r\n      'Noto Sans Mono',\r\n      'sans-serif',\r\n    ].join(','),\r\n    fontSize: 16\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      root: {\r\n        wordWrap: \"break-word\"\r\n      }\r\n   },\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n        variant: \"outlined\"\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme","import React from 'react'\r\n\r\nconst ERD = () => {\r\n\r\n  return (\r\n    <>\r\n      <p>ERå›³</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ERD","import React from 'react'\r\nimport { RedocStandalone } from 'redoc';\r\n\r\nconst ApiDoc = () => {\r\n\r\n  return (\r\n    <>\r\n      <RedocStandalone\r\n        specUrl={`${process.env.PUBLIC_URL}/openapi.json`}\r\n        options={{\r\n          nativeScrollbars: true\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApiDoc","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\nreturn(\r\n<div>\r\n <h2>404</h2>\r\n <p>Sorry, the page you're looking con not found.</p>\r\n</div>\r\n )\r\n}\r\nexport default Error;","import React from 'react'\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Slide,\r\n  useMediaQuery,\r\n  useScrollTrigger\r\n} from '@material-ui/core'\r\nimport { makeStyles, createStyles } from '@material-ui/styles'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    title: {\r\n      border: 0,\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(6)\r\n    },\r\n    button: {\r\n      '& > *': {\r\n        padding: theme.spacing(1),\r\n      }\r\n    }\r\n  }\r\n  ))\r\n\r\nconst TopBar = () => {\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n  const trigger = useScrollTrigger({threshold:1})\r\n  const classes = useStyles()\r\n  const contents = [\r\n    {\r\n      name: \"ApiDoc\",\r\n      path: \"/\"\r\n    },\r\n    {\r\n      name: \"ERM\",\r\n      path: \"/erd\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Slide direction=\"down\" in={!trigger}>\r\n        <AppBar position=\"sticky\">\r\n          <Toolbar>\r\n            <img\r\n              src={matches?`${process.env.PUBLIC_URL}/title.png`:`${process.env.PUBLIC_URL}/title_icon.png`}\r\n              height={40}\r\n              className={classes.title}\r\n              alt=\"title\"\r\n            />\r\n            {contents.map((content, i) =>\r\n              <Button\r\n                key={i}\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n                component={Link}\r\n                to={content.path}\r\n              >\r\n                {content.name}\r\n              </Button>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Slide>\r\n    </>\r\n  )\r\n}\r\nexport default TopBar","import React from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\nimport { Container } from '@material-ui/core'\nimport { makeStyles , createStyles} from '@material-ui/styles'\nimport ERD from './pages/ERD'\nimport ApiDoc from './pages/ApiDoc'\nimport Error from './pages/Error'\nimport TopBar from './components/TopBar'\n\nconst useStyles = makeStyles((theme)  =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(1)\n    }\n  }\n))\n\nconst Router = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <HashRouter>\n        <TopBar />\n        <Container className={classes.container} maxWidth=\"xl\">\n          <Switch>\n            <Route exact path=\"/\" component={ApiDoc} />\n            <Route path=\"/erd\" component={ERD} />\n            <Route component={Error} />\n          </Switch>\n        </Container>\n      </HashRouter>\n    </>\n  )\n}\n\nexport default Router","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport Router from './Router'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router />\n  </ThemeProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}